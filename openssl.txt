openssl is bacically a toolkit which consists of number of utilities.

If we build openssl package, private/ and certs/ directory will be empty by default open ssl doesnot contain any root certificates.


Key and Certifiacte Management: 

3 steps: 

1) Generate a strong private key.
2) Create a Certificate signing request and send it to CA(certificat Authority).
3) Install the CA provided certificate.

Considerations for keys:

Openssl supports RSA,DSA and ECDSA keys. Atleast try to use 2048.

##use below command to generate keys:
openssl genrsa -aes128 -out fd.key2048

Some organistaions also spend to buy HSM which is designed to make any key extraction impossible even with physical access to the server. 
To make this work, HSMs not only generate and store keys but also perform all necessary operations.


Private keys are stored in the so-called PEM format, which is just Text.

We can see a keys structure using the following rsa command.
#  openssl rsa -text -in fd.key

If we want to see only the public part of the key, use the below command:
#openssl rsa -in fd.key -pubout -out fd-public.key

DSA key generation is a two part process so we can use pipe to use single command at once.
# openssl dsaparam -genkey 2048 | openssl dsa -out dsa.key -aes128


CSR is a formal request asking a CA to sign a certificate and it contains public key of the entity requesting and some information about 
that entity which is the part of the certificate. A CSR is always signed with the private key corresponding to the public key it
carries. CSR creation is usually an interactive process during which we provide elements of the certificate distinguished name.If we want a field to be empty , we enter single dot(.).  If we press Return openssl will provide the default value. 

















